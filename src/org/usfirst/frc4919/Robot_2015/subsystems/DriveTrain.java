// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4919.Robot_2015.subsystems;

import org.usfirst.frc4919.Robot_2015.RobotMap;
import org.usfirst.frc4919.Robot_2015.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogInput ultrasonic = RobotMap.driveTrainUltrasonic;
    Gyro gyro1 = RobotMap.driveTrainGyro1;
    SpeedController frontRightoutput2 = RobotMap.driveTrainFrontRightoutput2;
    SpeedController frontleftoutput3 = RobotMap.driveTrainfrontleftoutput3;
    SpeedController backrighoutput4 = RobotMap.driveTrainbackrighoutput4;
    SpeedController backleftoutput5 = RobotMap.driveTrainbackleftoutput5;
    RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new mechaumdrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void autodrive(double magnitude, double direction, double rotation){
    	robotDrive41.mecanumDrive_Polar(magnitude, direction, rotation);
    }
    
    
    public void joystickDrive (Joystick drivestick) {
 
    	double twist;
    	twist= drivestick.getTwist();
    	
    	if (twist >= -0.3)
    	{
  //  		twist = 0;
  //  	}
    	if (twist <= 0.3)
    //	{
    		twist = 0;
    	}
    	robotDrive41.mecanumDrive_Cartesian(drivestick.getX(), drivestick.getY(), twist, 0);
    	
    	
    }
    public void resetGyro (){
    	gyro1.reset();
    }
}

//test
